// Brightness animation frames for heart beat pulses.
// Simulated via Daubechiesâ€™ wavelets (see Python: beatData2.py),
// with some data cleanup in a spreadsheet.

// It's a reasonable analogue to a PQRST heart ECG, without sticking too
// closely to that as a simulation target: the ECG plot heart electrical
// activity, when what we want here is an analogue of physical movement.
// ...so we're not going to get too sniffy about the precise shape of the
// pulse.

// This pulse presents 240 frames of animation for up to ~3 seconds at 60fps,
// so it's (slightly) oversampled. Each Heart object calculates the stepping
// through the animation frames implied by its own rate. So a 60bpm heart
// steps through every 4 frames of this animation, a 120bpm heart every 2
// frames, and so on.

int[] frames = {
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    79,
    79,
    80,
    81,
    83,
    85,
    87,
    90,
    94,
    99,
    104,
    111,
    118,
    126,
    135,
    145,
    155,
    166,
    178,
    189,
    201,
    212,
    222,
    232,
    240,
    247,
    252,
    255,
    255,
    253,
    248,
    241,
    231,
    218,
    203,
    187,
    169,
    149,
    130,
    110,
    90,
    71,
    54,
    38,
    25,
    15,
    7,
    2,
    0,
    1,
    5,
    11,
    19,
    28,
    39,
    51,
    63,
    74,
    85,
    95,
    104,
    110,
    115,
    118,
    119,
    119,
    116,
    113,
    108,
    102,
    95,
    89,
    82,
    76,
    71,
    66,
    63,
    60,
    58,
    58,
    58,
    60,
    62,
    64,
    67,
    71,
    74,
    77,
    80,
    82,
    84,
    85,
    86,
    87,
    86,
    86,
    85,
    84,
    83,
    82,
    80,
    79,
    78,
    77,
    76,
    76,
    75,
    75,
    75,
    75,
    76,
    76,
    76,
    77,
    77,
    78,
    78,
    78,
    79,
    79,
    79,
    79,
    79,
    79,
    79,
    79,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78,
    78
};
